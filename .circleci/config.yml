# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    docker:
      - image: circleci/python:3.6.1
      - image: circleci/mysql:5.5
      
    working_directory: ~/repo

    steps:
      - checkout
      - run:
          name: Install Docker Compose
          command: |
            curl -L https://github.com/docker/compose/releases/download/1.21.2/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
            chmod +x ~/docker-compose
            sudo mv ~/docker-compose /usr/local/bin/docker-compose
            docker-compose -v
      - setup_remote_docker
      - run:
          name: Build docker images
          command: docker-compose -f docker-compose.circle.yml build --pull && docker-compose -f docker-compose.circle.yml up --no-start
      - run:
          name: Start MySQL
          command: docker-compose -f docker-compose.circle.yml start db
      - run:
          name: Wait for MySQL to create initial database
          command: sleep 5
      - run:
          name: run tests
          command: docker-compose -f docker-compose.circle.yml run --rm web python3 manage.py test

      # # Download and cache dependencies
      # - restore_cache:
      #     keys:
      #     - v1-dependencies-{{ checksum "requirements.txt" }}
      #     # fallback to using the latest cache if no exact match is found
      #     - v1-dependencies-

      # - run:
      #     name: install dependencies
      #     command: |
      #       python3 -m venv venv
      #       . venv/bin/activate
      #       pip install -r requirements.txt

      # - save_cache:
      #     paths:
      #       - ./venv
      #     key: v1-dependencies-{{ checksum "requirements.txt" }}
        
      # # run tests!
      # - run:
      #     name: run tests
      #     command: |
      #       . venv/bin/activate
      #       python3 manage.py test

      # - store_artifacts:
      #     path: test-reports
      #     destination: test-reports
